
import java.util.ArrayList;
import java.util.List;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;

/**
 * TODO description
 */
public class PessoaDao {
	
	private Connection con;

		public PessoaDao()  {
			this.con = new Conexao().getConnection();
		}
		

	  public int cadastrar(Pessoa pessoa){
	
		    String sql = "insert into pessoa (nome,identificacao,endereco,email, dataNascimento) values (?,?,?,?,?)";
		     
		    try {
		    	
		        PreparedStatement stmt = con.prepareStatement(sql);
		
		        stmt.setString(1,pessoa.getNome());
		        stmt.setString(2,pessoa.getIdentificacao());
		        stmt.setString(3,pessoa.getEndereco());
		        stmt.setString(4,pessoa.getEmail());
		        stmt.setDate(5, new java.sql.Date(pessoa.getDataNascimento().getTime()));
		        
		        stmt.execute();
		        
		        ResultSet resultSet = stmt.executeQuery("SELECT LAST_INSERT_ID()");
		        resultSet.beforeFirst();
	            resultSet.next();
	            int id = resultSet.getInt("LAST_INSERT_ID()"); 
		        
		        stmt.close();
		        con.close();
		        return id;
		        
		    } catch (SQLException e) {
		        throw new RuntimeException(e);
		    }
      }
      
	    public boolean alterarPessoa(int id) {
	    	boolean resul;
	    	Pessoa pessoa = null;
      
		     String sql = "update pessoa set nome=?, set identificacao=?, set endereco=?," +
		             "set email=?, set dataNascimento=? where idpessoa=?";
		     try {
		    	 
		         PreparedStatement stmt = con.prepareStatement(sql);
		         stmt.setString(1, pessoa.getNome());
		         stmt.setString(2, pessoa.getIdentificacao());
		         stmt.setString(3, pessoa.getEndereco());
		         stmt.setString(4, pessoa.getEmail());
		         stmt.setDate(5, new java.sql.Date(pessoa.getDataNascimento().getTime()));
		         stmt.setInt(6, id);
		         
		         resul =  stmt.execute();
		         stmt.close();
		         
		         return resul;
		         
		     } catch (SQLException e) {
		         throw new RuntimeException(e);
		     }
      }
      
      public boolean excluirPessoa(int id) {
    	  boolean resul;
		     try {
		         PreparedStatement stmt = con.prepareStatement("delete" +
		                 "from pessoa where idpessoa=?");
		         
		         stmt.setInt(1, id);
		         
		         resul = stmt.execute();
		         stmt.close();
		         
		         return resul;
		         
		     } catch (SQLException e) {
		         throw new RuntimeException(e);
		     }
      }
      
      
     /* public static void main(String[] args) {
		     
    	 PessoaDao daoP = new PessoaDao(); 

    		List<Pessoa> lista = daoP.getLista();
    		
    		for (Pessoa pessoa : lista) {
    		  System.out.println("Nome: " + pessoa.getNome());
    		  System.out.println("Email: " + pessoa.getEmail());
    		  System.out.println("Data de Nascimento: " +pessoa.getDataNascimento().getTime() + "\n");
    		}
    			
    			
    		}
    		*/
	
}